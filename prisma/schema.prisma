model User {
  id           String           @id @default(cuid())
  email        String           @unique
  name         String?
  lastName     String?
  image        String?
  emailVerifiedAt DateTime?
  password     String?
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  accounts     OAuthAccount[]    @relation("UserOAuthAccounts")
  addresses    UserAddress[]
  preferences  UserPreferences?
}

model OAuthAccount {
  id             String     @id @default(cuid())
  provider       String
  providerUserId String
  accessToken    String?
  refreshToken   String?
  userId         String
  user           User       @relation("UserOAuthAccounts", fields: [userId], references: [id])
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  @@unique([provider, providerUserId])
}

model UserAddress{
  id           String           @id @default(cuid())
  userId       String
  user         User             @relation(fields: [userId], references: [id])
  address      String
  city         String
  state        String
  country      String
  postalCode   String
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
}

model UserPreferences {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String @unique
  categories  LocationCategory[]
  accommodationType LocationType
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Location {
  id          String   @id @default(cuid())
  name        String
  description String?
  latitude    Float
  longitude   Float
  city        String
  state       String
  country     String
  type        LocationType
  category    LocationCategory @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([latitude, longitude])
  Accommodation Accommodation[]
}

model LocationCategory {
  id        String   @id @default(cuid())
  name      String   @unique
  locations Location[]

  UserPreferences UserPreferences[]
}

model Accommodation {
  id          String   @id @default(cuid())
  location    Location @relation(fields: [locationId], references: [id])
  locationId  String
  pricePerNight Float
  rating      Float
  available   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum LocationType {
  VISIT
  STAY
}
